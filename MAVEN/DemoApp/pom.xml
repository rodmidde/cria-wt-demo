<!--
 Copyright 2010 akquinet
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.ica.cria.demo</groupId>
    <artifactId>DemoApp</artifactId>
    <version>1.0-SNAPSHOT</version>
    <name>DemoApp</name>

    <organization>
        <name>Rody Middelkoop</name>
        <url>http://www.han.nl</url>
    </organization>

    <build>
        <resources>
            <resource>
                <directory>${jsSrc}</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>com.github.searls</groupId>
                <artifactId>jasmine-maven-plugin</artifactId>
                <!-- need this version to be able to run mvn jasmine:bdd -->
                <version>1.0.2-beta-5</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>generateManualRunner</goal>
                            <goal>resources</goal>
                            <goal>testResources</goal>
                            <goal>test</goal>
                            <goal>preparePackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <haltOnFailure>false</haltOnFailure>
                    <jsSrcDir>${jsSrc}</jsSrcDir>
                    <jsTestSrcDir>src/test/javascript</jsTestSrcDir>
                    <junitXmlReportFileName>../surefire-reports/TEST-jasmine.xml</junitXmlReportFileName>
                    <sourceExcludes>
                        <exclude>**/libs/**/*.js</exclude>
                    </sourceExcludes>
                    <!-- Use the sourceIncludes tag to force the order in which the js files get loaded
                    <sourceIncludes>
                        <include>**/FirstFile.js</include>
                        <include>**/SecondFile.js</include>
                    </sourceIncludes>
                    -->
                    <preloadSources>
                        <!-- INCLUDE extra sources first when you have more JavaScript files

                            <include>../../src/main/javascript/ImageLibrary.js</include>
                        -->
                        <source>../../src/main/javascript/libs/jquery-1.9.1.min.js</source>
                        <source>../../src/main/javascript/libs/jasmine-jquery-1.5.0.js</source>
                    </preloadSources>

                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.1.2</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.timurstrekalov</groupId>
                <artifactId>saga-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>coverage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <baseDir>${project.build.directory}/jasmine</baseDir>
                    <includes>
                        SpecRunner.html
                    </includes>
                    <outputDir>${saga.output.dir}</outputDir>
                    <noInstrumentPatterns>
                        <pattern>.*/test/.*</pattern>
                        <pattern>.*/libs/.*</pattern>
                        <pattern>.*/spec/.*</pattern>
                    </noInstrumentPatterns>
                    <outputStrategy>TOTAL</outputStrategy>
                </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <version>1.7</version>
              <executions>
                <execution>
                  <id>saga-to-sonar-lcov</id>
                  <phase>verify</phase>
                  <goals>
                    <goal>run</goal>
                  </goals>
                  <configuration>
                    <target>
                      <echo message="setting up sonar lcov file (from saga): ${saga.output.coverage.sonar.lcov.file} ..." />
                      <copy file="${saga.output.coverage.file}" tofile="${saga.output.coverage.sonar.lcov.file}" />
                      
                      <echo message="replacing '${saga.output.lcov.source.dir.path} with '${sonar.lcov.source.dir.path}' in ${saga.output.coverage.sonar.lcov.file}" />
                      <replace file="${saga.output.coverage.sonar.lcov.file}"
                          token="${saga.output.lcov.source.dir.path}"
                          value="${sonar.lcov.source.dir.path}" />
                    </target>
                  </configuration>
                </execution>
              </executions>
            </plugin>
        </plugins>

    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>gr.abiss.mvn.plugins</groupId>
                <artifactId>maven-jstools-plugin</artifactId>
                <version>0.7</version>
                <configuration>
                    <jsDir>src/main/javascript</jsDir>
                    <includePrivate>true</includePrivate>
                    <includeUndocumented>true</includeUndocumented>
                    <excludes>**/libs/**/*.js</excludes>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>jslint</report>
                            <report>jsdoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.12</version>
            </plugin>
        </plugins>
    </reporting>

    <properties>
        <jsSrc>src/main/javascript</jsSrc>
        <!-- properties for saga -->
        <saga.output.dir>${project.build.directory}/coverage</saga.output.dir>
        <saga.output.coverage.file>${saga.output.dir}/total-coverage.dat</saga.output.coverage.file>
        <saga.output.coverage.sonar.lcov.file>${saga.output.dir}/total-coverage-sonar.dat</saga.output.coverage.sonar.lcov.file>
        
        <!-- properties for translating saga output to sonar lcov file -->
        <saga.output.lcov.source.dir.path>SF:src/</saga.output.lcov.source.dir.path>
        <sonar.lcov.source.dir.path>SF:src/main/javascript/</sonar.lcov.source.dir.path>
        
        <!-- properties for sonar -->
        <sonar.language>js</sonar.language>     <!-- NOT javascript/JavaScript ! -->
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.javascript.lcov.reportPath>${saga.output.coverage.sonar.lcov.file}</sonar.javascript.lcov.reportPath>
        <!-- used in build/properties -->
        <sonar.sources>${basedir}/src/main/javascript</sonar.sources>
    </properties>
</project>
